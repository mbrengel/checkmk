[mrpe]
    # Run classical monitoring plugins. The word before the command
    # line is the service description for the monitoring. Use backslashes
    # in Windows-paths.
    # Note: The windows agent will prefix all commands without an absolute
    #       path with the agents executable dir. So if you want to use
    #       system wide commands like cscript or ping, you need to specify
    #       them with an absolute path
    check = Dummy mrpe\check_crit
    check = IP_Configuration 'mrpe\check_ipconfig' 1.2.3.4
    check = Whatever "c:\myplugins\check_whatever" -w 10 -c 20
    #
    # The option include allows you to define additional include files and the
    # user domain in which include files should be executed.
    #
    include \\exampleuser = "C:\includes\exampleuser_mrpe.cfg"
    #
    # If you omit the user the file is executed with the current user
    #
    include = C:\includes\default.cfg
    #
    # The syntax in the mrpe include file is the same as in the mrpe section,
    # with the exception that you cannot add further includes in a include file.
    # There is also no need to define a [mrpe] section in an included file. You
    # just need to define the <tt>check</tt> lines here.
    #
    # exampleuser_mrpe.cfg
    #     check = Dummy mrpe\check_crit
    #     check = IP_Configuration mrpe\check_ipconfig 1.2.3.4
    #
    #     # Paths or plugin parameters containing spaces must be quoted:
    #     check = Dummy "C:\Program Files (x86)\check_mk\mrpe\check_crit.bat"
    #     some param "with space"
    #
    # Important: Keep in mind that the agent needs the permission to run
    # scripts as other user. Internally it uses the windows command runas /User:
    # which prompts for a password if agent has no permission to change to this user.
    # In this case the check_mk agent will get stuck!
